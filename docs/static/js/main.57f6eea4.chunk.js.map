{"version":3,"sources":["components/Card/index.js","components/PokemonModal/index.js","App/index.js","components/Header/index.js","About/index.js","Favorites/index.js","router/index.js","index.js"],"names":["Card","pokemon","onClick","className","data","types","type","name","style","backgroundImage","sprites","front_default","weight","height","Modal","setAppElement","PokemonModal","isOpen","setIsOpen","modalStatsTypeValue","onRequestClose","classname","abilities","ability","Button","variant","color","size","App","useState","pokemons","setPokemons","setPokemon","currentPage","setCurrentPage","itemPerPage","location","useLocation","fetchPokemon","a","axios","get","res","pokemonsReq","results","map","url","Promise","all","console","log","getParams","param","result","window","search","match","RegExp","split","useEffect","filterPoke","filter","includes","i","length","indexOfLastItem","indexOfFirstItem","currentItems","slice","key","id","Pagination","count","Math","ceil","page","onChange","event","value","Header","pokemonType","setPokemonType","pokemonTypeName","setPokemonTypeName","pokeName","setPokeName","params","URLSearchParams","history","useHistory","fetchTypes","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","to","InputBase","sx","ml","flex","placeholder","inputProps","e","target","IconButton","p","append","toLowerCase","push","toString","set","replace","FormControl","InputLabel","Select","labelId","multiple","input","OutlinedInput","label","renderValue","selected","join","item","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","About","Favorites","Router","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57f6eea4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './index.css'\r\n\r\n\r\n\r\nfunction Card ({ pokemon, onClick }) {\r\n\r\n  const typeClass = \"wrapCard\";\r\n\r\n\r\n  return (\r\n  <>\r\n    <div onClick={onClick} pokemon={pokemon} className={`${typeClass} ${pokemon.data.types[0].type.name}`}>\r\n      <div className=\"card\" ><h3>{pokemon.data.name}</h3></div>\r\n      <div className=\"image\" style={{ backgroundImage: `url(${pokemon.data.sprites.front_default})` }} />\r\n      <div className=\"stats\" >\r\n        <ul>\r\n          <li>weight:</li>\r\n          <li>height:</li>\r\n          <li>type:</li>\r\n        </ul>\r\n        <ul>\r\n          <li>{pokemon.data.weight/10} kg</li>\r\n          <li>{pokemon.data.height/10} m</li>\r\n          <li>{pokemon.data.types[0].type.name}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Modal from 'react-modal'\r\nimport Button from '@material-ui/core/Button';\r\nimport './index.css'\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst PokemonModal = ({ isOpen, setIsOpen, pokemon }) => {\r\n\r\n  const onClickClose = ()=> {\r\n    setIsOpen(false)\r\n  };\r\n\r\n  const onRequestClose = ()=> {\r\n    setIsOpen(false)\r\n  };\r\n\r\n  const modalStatsTypeValue = \"modalStatsTypeValue\";\r\n\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        setIsOpen={setIsOpen}\r\n        onRequestClose={onRequestClose}\r\n      >\r\n        { pokemon.data && (\r\n          <div classname=\"modalMain\">\r\n            <h2>{pokemon.data.name}</h2>\r\n            <div className=\"modalWrap\">\r\n              <div className=\"modalCard\">\r\n                <div className=\"modalImg\" style={{ backgroundImage: `url(${pokemon.data.sprites.front_default})` }} />\r\n              </div>\r\n              <div className=\"statsWrap\">\r\n                <div className=\"modalStats\">\r\n                  <div className=\"statType\">Stats</div>\r\n                  <ul>\r\n                    <li>\r\n                      <span className=\"statType\">Weight</span>\r\n                      <span className=\"statValue\">{pokemon.data.weight/10} kg</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"statType\">Height</span>\r\n                      <span className=\"statValue\">{pokemon.data.height/10} m</span>\r\n                    </li>\r\n                  </ul>\r\n                  <ul>\r\n                    <span className=\"statType\">Abilities</span>\r\n                    <li className=\"statValue\">{pokemon.data.abilities[0].ability.name}</li>\r\n                  </ul>\r\n                </div>\r\n                <span className=\"modalType\">Type</span>\r\n                <div className=\"modalStatsType\">\r\n                    <div className={`${modalStatsTypeValue} ${pokemon.data.types[0].type.name}`}>{pokemon.data.types[0].type.name}</div>\r\n                    <div className={`${modalStatsTypeValue} ${pokemon.data.types[1].type.name}`}>{pokemon.data.types[1].type.name}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n        }\r\n        <Button onClick={onClickClose} variant=\"outlined\" color=\"primary\" size=\"small\" >Close</Button>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PokemonModal\r\n","import React from 'react';\nimport Card from '../components/Card';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport PokemonModal from '../components/PokemonModal';\nimport axios from 'axios';\nimport Pagination from '@material-ui/lab/Pagination';\nimport './index.css';\n\n\nfunction App({ onRequestClose }) {\n\n  const [pokemons, setPokemons] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [pokemon, setPokemon] = useState({});\n  const [currentPage, setCurrentPage] = useState(1)\n  const [itemPerPage, setItemtPerPage] = useState(10)\n  const [pokemonsType, setPokemonsTypes] = useState([]);\n\n  const location = useLocation();\n\n  const fetchPokemon = async ()=> {\n    try{\n      const res = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=32&offset=0`);\n      const pokemonsReq = res.data.results.map(({url}) =>{\n        return axios.get(url)\n      });\n\n      const pokemons = await Promise.all(pokemonsReq)\n      setPokemons(pokemons)\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n//   const fetchTypes = async ()=> {\n//     try{\n//       const res = getParams(\"type\").split('%2C').map(item=>{ return axios.get(`https://pokeapi.co/api/v2/type/${item}?limit=32&offset=0`)})\n//       const types = await Promise.all(res)\n//       setPokemonsTypes(types.map(item=>{return item.data.pokemon}))\n\n//     } catch (err) {\n//       console.log(err)\n//     }\n//   }\n\n// console.log(pokemonsType)\n\n  \n  function getParams(param) {\n    var result = window.location.search.match(\n        new RegExp(\"(\\\\?|&)\" + param + \"(\\\\[\\\\])?=([^&]*)\")\n    );\n\n    return result ? result[3] : false;\n}\n  if(getParams(\"type\")){\n  console.log(getParams(\"type\").split('%2C'))\n  }\n  \n  useEffect(() => {\n    fetchPokemon();\n  }, []);\n\n  useEffect(() => {\n    if(!getParams(\"name\") && !getParams(\"type\")){ return fetchPokemon() };\n    if(getParams(\"name\")){\n    const filterPoke = pokemons.filter(pokemon=>{\n      return pokemon.data.name.includes(getParams(\"name\"))\n     })\n     setPokemons(filterPoke) }\n    if(getParams(\"type\")){\n\n      // fetchTypes();\n\n      const filterPoke = pokemons.filter(function (pokemon){\n       for(let i=0; i <= getParams(\"type\").split('2%C').length; i++){ \n         if(getParams(\"type\").split('2%C')[i] === pokemon.data.types[0].type.name){\n           return pokemon\n         }\n       }\n       })\n       setPokemons(filterPoke)\n       console.log(pokemons, \"filtered\")\n      }\n      if(getParams(\"name\") && getParams(\"type\")){\n        const filterPoke = pokemons.filter(pokemon=>{ \n          return pokemon.data.name.includes(getParams(\"name\")) && getParams(\"type\").split('2%C').includes(pokemon.data.types[0].type.name) \n        })\n        setPokemons(filterPoke)\n      }\n     \n  }, [location.search]);\n\n  console.log(pokemons, \"globPokemons\")\n   const indexOfLastItem = currentPage * itemPerPage;\n   const indexOfFirstItem = indexOfLastItem - itemPerPage;\n   const currentItems = pokemons.slice(indexOfFirstItem, indexOfLastItem)\n\n   const handleChange = (event, value) => {\n    setCurrentPage(value);\n  };\n\n\n\n  const onClick = (pokemon)=> {\n    setPokemon(pokemon);\n    setIsOpen(true);\n  }\n\n\n\n  return pokemons.length ? (\n    <div className=\"App\">\n      <div className=\"main\">\n        <div className=\"cardList\">\n        {currentItems.map((pokemon, key)=> (\n            <Card\n              key={pokemon.data.id}\n              onClick={()=>onClick(pokemon)}\n              currentItems={currentItems}\n              pokemon={pokemon}\n            />\n        ))}\n        </div>\n        <PokemonModal\n          isOpen={isOpen}\n          setIsOpen={setIsOpen}\n          onRequestClose={onRequestClose}\n          pokemon={pokemon}\n        />\n        <Pagination\n          count={Math.ceil(pokemons.length / itemPerPage)}\n          page={currentPage}\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  ): null\n}\n\nexport default App\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport Button from '@material-ui/core/Button'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport './index.css'\r\nimport { ListItemIcon } from '@material-ui/core';\r\n\r\n\r\nfunction Header({ pokemons }) {\r\n\r\n  const [pokemonType, setPokemonType] = useState([]);\r\n  const [pokemonTypeName, setPokemonTypeName] = useState([]);\r\n  const [pokeName, setPokeName] = useState(\"\");\r\n\r\n  const params = new URLSearchParams()\r\n  const history = useHistory()\r\n \r\n  const fetchTypes = async ()=> {\r\n    try{\r\n      const res = await axios.get('https://pokeapi.co/api/v2/type')\r\n      const types = res.data.results.map(({name})=> name)\r\n      setPokemonType(types)\r\n      \r\n    } catch(err){\r\n      console.log(err)\r\n    }\r\n  };\r\n\r\n  useEffect(()=> {\r\n    fetchTypes();\r\n  }, [])\r\n\r\n  console.log(pokemonType)\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPokemonTypeName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  const onClick = ()=> {\r\n    if(pokeName && pokemonType){\r\n      params.append('name', pokeName.toLowerCase())\r\n      history.push({ search: params.toString() })\r\n      params.set('type', pokemonTypeName)\r\n      history.push({ search: params.toString() })\r\n      return\r\n    }\r\n    if(pokeName){\r\n    params.append('name', pokeName.toLowerCase())\r\n    history.push({ search: params.toString() })\r\n    return\r\n    }\r\n    if(pokemonTypeName){\r\n      params.set('type', pokemonTypeName)\r\n      history.push({ search: params.toString() })\r\n      return\r\n    }\r\n    \r\n    history.replace(\"/\")\r\n    setPokeName(\"\");\r\n    setPokemonTypeName(\"\");\r\n    \r\n  }\r\n\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"headerTop\">\r\n          <div className=\"social\">vk, f, ins</div>\r\n          <div className=\"regWrap\">\r\n            <div className=\"login\">\r\n              <AccountCircleIcon />\r\n              <Button variant=\"outlined\" color=\"primary\" size=\"small\" >Login</Button>\r\n            </div>\r\n            <div className=\"register\">\r\n              <Button variant=\"outlined\" color=\"primary\" size=\"small\" >Register</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"headerBottom\">\r\n          <div className=\"logo\"></div>\r\n          <div className=\"navPanel\">\r\n            <div className=\"navPanList\">\r\n              <Link to='/' className='link'>\r\n                <li><Button variant=\"contained\" color=\"primary\" size=\"large\" >Home</Button></li>\r\n              </Link>\r\n              <Link to='/about' className='link'>\r\n                <li><Button variant=\"contained\" color=\"primary\" size=\"large\" >About</Button></li>\r\n              </Link>\r\n              <Link to='/favorites' className='link'>\r\n                <li><Button variant=\"contained\" color=\"primary\" size=\"large\" >Favorite</Button></li>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"filters\">\r\n            <div className=\"search\">\r\n            <InputBase\r\n              sx={{ ml: 1, flex: 1 }}\r\n              placeholder=\"Search Pokemon\"\r\n              inputProps={{ 'aria-label': 'Search Pokemon' }}\r\n              onChange={e => {setPokeName(e.target.value)}}\r\n              value={pokeName}\r\n            />\r\n            <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\" onClick={onClick}>\r\n              <SearchIcon />\r\n            </IconButton>\r\n            </div>\r\n            <div className=\"searchType\">\r\n            <FormControl className=\"form\" >\r\n              <InputLabel id=\"demo-multiple-checkbox-label\">Choose pokemon type</InputLabel>\r\n              <Select\r\n                labelId=\"demo-multiple-checkbox-label\"\r\n                id=\"demo-multiple-checkbox\"\r\n                multiple\r\n                value={pokemonTypeName}\r\n                onChange={handleChange}\r\n                input={<OutlinedInput label=\"Choose pokemon type\" />}\r\n                renderValue={(selected) => selected.join(',')}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {pokemonType.map((item) => (\r\n                  <MenuItem key={item} value={item}>\r\n                    <Checkbox checked={pokemonTypeName.indexOf(item) > -1} />\r\n                    <ListItemText primary={item} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      );\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './index.css'\r\n\r\nfunction About () {\r\n  return(\r\n    <div>\r\n      <div>About</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport './index.css'\r\n\r\nfunction Favorites () {\r\n  return(\r\n    <div>\r\n      <div>Favorites</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favorites\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\nimport App from '../App'\r\nimport Header from '../components/Header'\r\nimport About from '../About'\r\nimport Favorites from '../Favorites'\r\n\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter>\r\n          <Header />\r\n      <Switch>\r\n        <Route exact={true} path=\"/\">\r\n          <App />\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/favorites\">\r\n          <Favorites />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Router","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './router'\n\nReactDOM.render(\n  <Router />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}